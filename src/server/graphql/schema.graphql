### This file was generated by Nexus Schema
### Do not make changes to this file directly

type Address {
  city: String
  country: String
  cp: Int
  province: String
  street: String
}

type Brand {
  brandName: String!
  commercialAddress: CommercialAddress
  commercialConditions: CommercialConditions
  commercialName: String
  depositAddress: DepositAddress
  id: ID!
  legalAddress: Address
  taxCategory: String
  taxId: String
}

input BrandWhereUniqueInput {
  id: ID!
}

type CommercialAddress {
  Address: Address
  commercialContact: String
  commercialPhone: Int
}

type CommercialConditions {
  Address: Delivery
  amountDiscount: Int
  minimumPurchase: Int
  paymentAccepted: String
  term: Int
}

type Delivery {
  deliveryTime: String
  shipping: String
}

type DepositAddress {
  Address: Address
  depositeContact: String
  depositePhone: Int
}

type Info {
  info1: String
  info2: String
}

type Item {
  description: String
  id: ID!
  imageUrl: String
  info: Info
  title: String!
  url: String
}

input ItemWhereUniqueInput {
  id: ID!
}

type Mutation {
  createBrand: Brand
  createItem: Item
  createProject(name: String!, slug: String): Project
  createStripeCheckoutBillingPortalUrl(projectId: String!): String
  createStripeCheckoutSession(plan: PaidPlan!, projectId: String!): String
  inviteToProject(email: String!, projectId: String!): Boolean
  removeBrand: Brand
  removeItem: Item
  removeUserFromProject(projectId: String!, userId: String!): Project
  updateUser(name: String, userId: String!): User
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

enum PaidPlan {
  pro
}

type Project {
  id: String!
  name: String
  paidPlan: PaidPlan
  slug: String
  users(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the first n elements from the list.
    """
    first: Int!
  ): UserConnection
}

type ProjectConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ProjectEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ProjectEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: Project
}

type Query {
  brand(where: BrandWhereUniqueInput!): Brand
  brands: [Brand!]
  currentUser: User
  item(where: ItemWhereUniqueInput!): Item
  items: [Item!]
  project(id: String, slug: String): Project
}

type User {
  email: String!
  id: String!
  name: String
  projects(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the first n elements from the list.
    """
    first: Int!
  ): ProjectConnection
}

type UserConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type UserEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: User
}
